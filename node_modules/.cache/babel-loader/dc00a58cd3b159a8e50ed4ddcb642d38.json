{"ast":null,"code":"var days;\n\n(function (days) {\n  days[days[\"Sunday\"] = 0] = \"Sunday\";\n  days[days[\"Monday\"] = 1] = \"Monday\";\n  days[days[\"Tuesday\"] = 2] = \"Tuesday\";\n  days[days[\"Wednesday\"] = 3] = \"Wednesday\";\n  days[days[\"Thursday\"] = 4] = \"Thursday\";\n  days[days[\"Friday\"] = 5] = \"Friday\";\n  days[days[\"Saturday\"] = 6] = \"Saturday\";\n})(days || (days = {}));\n\nclass Calendar {\n  getDateColumns() {\n    let tempArray = [];\n    const currentMonthFirstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\n    const currentMonthLastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0);\n    const columnsStartDate = currentMonthFirstDay.getDay() === days.Sunday ? new Date(this.date.getFullYear(), this.date.getMonth(), -5) : new Date(this.date.getFullYear(), this.date.getMonth(), days.Monday - currentMonthFirstDay.getDay() + 1);\n    const columnStopDate = currentMonthLastDay.getDay() === days.Sunday ? currentMonthLastDay : new Date(this.date.getFullYear(), this.date.getMonth(), currentMonthLastDay.getDate() + (7 - currentMonthLastDay.getDay()));\n\n    for (let i = columnsStartDate; i <= columnStopDate; i.setDate(columnsStartDate.getDate() + 1)) {\n      tempArray.push(columnsStartDate);\n    }\n\n    return tempArray;\n  }\n\n  constructor() {\n    let _date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n\n    this.date = void 0;\n    this.daysColumns = void 0;\n    this.date = _date;\n    const dateArray = this.getDateColumns();\n    this.daysColumns = {\n      Sunday: dateArray.filter(_date => _date.getDay() === days.Sunday),\n      Monday: dateArray.filter(_date => _date.getDay() === days.Monday),\n      Tuesday: dateArray.filter(_date => _date.getDay() === days.Tuesday),\n      Wednesday: dateArray.filter(_date => _date.getDay() === days.Wednesday),\n      Thursday: dateArray.filter(_date => _date.getDay() === days.Thursday),\n      Friday: dateArray.filter(_date => _date.getDay() === days.Friday),\n      Saturday: dateArray.filter(_date => _date.getDay() === days.Saturday)\n    };\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/ataka/Desktop/calendar/src/Classes/calendarClass/index.tsx"],"names":["days","Calendar","getDateColumns","tempArray","currentMonthFirstDay","Date","date","getFullYear","getMonth","currentMonthLastDay","columnsStartDate","getDay","Sunday","Monday","columnStopDate","getDate","i","setDate","push","constructor","_date","daysColumns","dateArray","filter","Tuesday","Wednesday","Thursday","Friday","Saturday"],"mappings":"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","sourcesContent":["\r\n\r\nenum days {\r\n    Sunday,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\n\r\nclass Calendar {\r\n    date: Date\r\n    daysColumns: {\r\n        Sunday: Array<Date>,\r\n        Monday: Array<Date>,\r\n        Tuesday: Array<Date>,\r\n        Wednesday: Array<Date>,\r\n        Thursday: Array<Date>,\r\n        Friday: Array<Date>,\r\n        Saturday: Array<Date>\r\n    }\r\n    private getDateColumns() {\r\n        let tempArray: Array<Date> = []\r\n        const currentMonthFirstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1)\r\n        const currentMonthLastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0)\r\n        const columnsStartDate = currentMonthFirstDay.getDay() === days.Sunday\r\n            ? new Date(this.date.getFullYear(), this.date.getMonth(), -5)\r\n            : new Date(this.date.getFullYear(), this.date.getMonth(), (days.Monday - currentMonthFirstDay.getDay()) + 1)\r\n        const columnStopDate = currentMonthLastDay.getDay() === days.Sunday\r\n            ? currentMonthLastDay\r\n            : new Date(this.date.getFullYear(), this.date.getMonth(), currentMonthLastDay.getDate() + (7 - currentMonthLastDay.getDay()))\r\n        for (let i = columnsStartDate; i <= columnStopDate; i.setDate(columnsStartDate.getDate() + 1)) {\r\n            tempArray.push(columnsStartDate)\r\n        }\r\n        return tempArray\r\n    }\r\n    constructor(_date: Date = new Date()) {\r\n        this.date = _date\r\n        const dateArray = this.getDateColumns()\r\n        this.daysColumns = {\r\n            Sunday: dateArray.filter((_date) => _date.getDay() === days.Sunday),\r\n            Monday: dateArray.filter((_date) => _date.getDay() === days.Monday),\r\n            Tuesday: dateArray.filter((_date) => _date.getDay() === days.Tuesday),\r\n            Wednesday: dateArray.filter((_date) => _date.getDay() === days.Wednesday),\r\n            Thursday: dateArray.filter((_date) => _date.getDay() === days.Thursday),\r\n            Friday: dateArray.filter((_date) => _date.getDay() === days.Friday),\r\n            Saturday: dateArray.filter((_date) => _date.getDay() === days.Saturday)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}